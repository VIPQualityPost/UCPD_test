ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usbpd_pwr_user.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.BSP_USBPD_PWR_Init,"ax",%progbits
  20              		.align	1
  21              		.weak	BSP_USBPD_PWR_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	BSP_USBPD_PWR_Init:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "USBPD/usbpd_pwr_user.c"
   1:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN Header */
   2:USBPD/usbpd_pwr_user.c **** /**
   3:USBPD/usbpd_pwr_user.c ****   ******************************************************************************
   4:USBPD/usbpd_pwr_user.c ****   * @file    usbpd_pwr_user.c
   5:USBPD/usbpd_pwr_user.c ****   * @author  MCD Application Team
   6:USBPD/usbpd_pwr_user.c ****   * @brief   USBPD PWR user code
   7:USBPD/usbpd_pwr_user.c ****   ******************************************************************************
   8:USBPD/usbpd_pwr_user.c ****   * @attention
   9:USBPD/usbpd_pwr_user.c ****   *
  10:USBPD/usbpd_pwr_user.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:USBPD/usbpd_pwr_user.c ****   * All rights reserved.
  12:USBPD/usbpd_pwr_user.c ****   *
  13:USBPD/usbpd_pwr_user.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:USBPD/usbpd_pwr_user.c ****   * in the root directory of this software component.
  15:USBPD/usbpd_pwr_user.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:USBPD/usbpd_pwr_user.c ****   *
  17:USBPD/usbpd_pwr_user.c ****   ******************************************************************************
  18:USBPD/usbpd_pwr_user.c ****   */
  19:USBPD/usbpd_pwr_user.c **** /* USER CODE END Header */
  20:USBPD/usbpd_pwr_user.c **** 
  21:USBPD/usbpd_pwr_user.c **** /* Includes ------------------------------------------------------------------*/
  22:USBPD/usbpd_pwr_user.c **** #include "usbpd_pwr_user.h"
  23:USBPD/usbpd_pwr_user.c **** #include "stm32g4xx_hal.h"
  24:USBPD/usbpd_pwr_user.c **** #if defined(_TRACE)
  25:USBPD/usbpd_pwr_user.c **** #include "usbpd_core.h"
  26:USBPD/usbpd_pwr_user.c **** #include "usbpd_trace.h"
  27:USBPD/usbpd_pwr_user.c **** #endif /* _TRACE */
  28:USBPD/usbpd_pwr_user.c **** 
  29:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN include */
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 2


  30:USBPD/usbpd_pwr_user.c **** /* USER CODE END include */
  31:USBPD/usbpd_pwr_user.c **** 
  32:USBPD/usbpd_pwr_user.c **** /** @addtogroup BSP
  33:USBPD/usbpd_pwr_user.c ****   * @{
  34:USBPD/usbpd_pwr_user.c ****   */
  35:USBPD/usbpd_pwr_user.c **** 
  36:USBPD/usbpd_pwr_user.c **** /** @addtogroup POWER
  37:USBPD/usbpd_pwr_user.c ****   * @{
  38:USBPD/usbpd_pwr_user.c ****   */
  39:USBPD/usbpd_pwr_user.c **** /** @defgroup POWER_Private_Typedef Private Typedef
  40:USBPD/usbpd_pwr_user.c ****   * @{
  41:USBPD/usbpd_pwr_user.c ****   */
  42:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN POWER_Private_Typedef */
  43:USBPD/usbpd_pwr_user.c **** 
  44:USBPD/usbpd_pwr_user.c **** /* USER CODE END POWER_Private_Typedef */
  45:USBPD/usbpd_pwr_user.c **** /**
  46:USBPD/usbpd_pwr_user.c ****   * @}
  47:USBPD/usbpd_pwr_user.c ****   */
  48:USBPD/usbpd_pwr_user.c **** 
  49:USBPD/usbpd_pwr_user.c **** /** @defgroup POWER_Private_Constants Private Constants
  50:USBPD/usbpd_pwr_user.c **** * @{
  51:USBPD/usbpd_pwr_user.c **** */
  52:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN POWER_Private_Constants */
  53:USBPD/usbpd_pwr_user.c **** 
  54:USBPD/usbpd_pwr_user.c **** /* USER CODE END POWER_Private_Constants */
  55:USBPD/usbpd_pwr_user.c **** /**
  56:USBPD/usbpd_pwr_user.c ****   * @}
  57:USBPD/usbpd_pwr_user.c ****   */
  58:USBPD/usbpd_pwr_user.c **** 
  59:USBPD/usbpd_pwr_user.c **** /** @defgroup POWER_Private_Macros Private Macros
  60:USBPD/usbpd_pwr_user.c ****   * @{
  61:USBPD/usbpd_pwr_user.c ****   */
  62:USBPD/usbpd_pwr_user.c **** #if defined(_TRACE)
  63:USBPD/usbpd_pwr_user.c **** #define PWR_DEBUG_TRACE(_PORT_, __MESSAGE__)  USBPD_TRACE_Add(USBPD_TRACE_DEBUG,    (_PORT_), 0u, (
  64:USBPD/usbpd_pwr_user.c **** #else
  65:USBPD/usbpd_pwr_user.c **** #define PWR_DEBUG_TRACE(_PORT_, __MESSAGE__)
  66:USBPD/usbpd_pwr_user.c **** #endif /* _TRACE */
  67:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN POWER_Private_Macros */
  68:USBPD/usbpd_pwr_user.c **** 
  69:USBPD/usbpd_pwr_user.c **** /* USER CODE END POWER_Private_Macros */
  70:USBPD/usbpd_pwr_user.c **** /**
  71:USBPD/usbpd_pwr_user.c ****   * @}
  72:USBPD/usbpd_pwr_user.c ****   */
  73:USBPD/usbpd_pwr_user.c **** 
  74:USBPD/usbpd_pwr_user.c **** /** @defgroup POWER_Private_Variables Private Variables
  75:USBPD/usbpd_pwr_user.c ****   * @{
  76:USBPD/usbpd_pwr_user.c ****   */
  77:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN POWER_Private_Variables */
  78:USBPD/usbpd_pwr_user.c **** 
  79:USBPD/usbpd_pwr_user.c **** /* USER CODE END POWER_Private_Variables */
  80:USBPD/usbpd_pwr_user.c **** /**
  81:USBPD/usbpd_pwr_user.c ****   * @}
  82:USBPD/usbpd_pwr_user.c ****   */
  83:USBPD/usbpd_pwr_user.c **** 
  84:USBPD/usbpd_pwr_user.c **** /** @defgroup POWER_Private_Functions Private Functions
  85:USBPD/usbpd_pwr_user.c ****   * @{
  86:USBPD/usbpd_pwr_user.c ****   */
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 3


  87:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN POWER_Private_Prototypes */
  88:USBPD/usbpd_pwr_user.c **** 
  89:USBPD/usbpd_pwr_user.c **** /* USER CODE END POWER_Private_Prototypes */
  90:USBPD/usbpd_pwr_user.c **** /**
  91:USBPD/usbpd_pwr_user.c ****   * @}
  92:USBPD/usbpd_pwr_user.c ****   */
  93:USBPD/usbpd_pwr_user.c **** 
  94:USBPD/usbpd_pwr_user.c **** /** @defgroup POWER_Exported_Variables Exported Variables
  95:USBPD/usbpd_pwr_user.c ****   * @{
  96:USBPD/usbpd_pwr_user.c ****   */
  97:USBPD/usbpd_pwr_user.c **** /* USER CODE BEGIN POWER_Exported_Variables */
  98:USBPD/usbpd_pwr_user.c **** 
  99:USBPD/usbpd_pwr_user.c **** /* USER CODE END POWER_Exported_Variables */
 100:USBPD/usbpd_pwr_user.c **** /**
 101:USBPD/usbpd_pwr_user.c ****   * @}
 102:USBPD/usbpd_pwr_user.c ****   */
 103:USBPD/usbpd_pwr_user.c **** 
 104:USBPD/usbpd_pwr_user.c **** /** @addtogroup POWER_Exported_Functions
 105:USBPD/usbpd_pwr_user.c ****   * @{
 106:USBPD/usbpd_pwr_user.c ****   */
 107:USBPD/usbpd_pwr_user.c **** /**
 108:USBPD/usbpd_pwr_user.c ****   * @brief  Global initialization of PWR resource used by USB-PD
 109:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 110:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 111:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 112:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 113:USBPD/usbpd_pwr_user.c ****   */
 114:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_Init(uint32_t Instance)
 115:USBPD/usbpd_pwr_user.c **** {
  30              		.loc 1 115 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 116:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_Init */
 117:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 118:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
  35              		.loc 1 118 3 view .LVU1
 119:USBPD/usbpd_pwr_user.c **** 
 120:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
  36              		.loc 1 120 3 view .LVU2
  37              		.loc 1 120 6 is_stmt 0 view .LVU3
  38 0000 00B9     		cbnz	r0, .L4
  39              	.LVL1:
  40              	.L1:
 121:USBPD/usbpd_pwr_user.c ****   {
 122:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 123:USBPD/usbpd_pwr_user.c ****   }
 124:USBPD/usbpd_pwr_user.c ****   return ret;
 125:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_Init */
 126:USBPD/usbpd_pwr_user.c **** }
  41              		.loc 1 126 1 view .LVU4
  42 0002 7047     		bx	lr
  43              	.LVL2:
  44              	.L4:
 122:USBPD/usbpd_pwr_user.c ****   }
  45              		.loc 1 122 9 view .LVU5
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 4


  46 0004 6FF00100 		mvn	r0, #1
  47              	.LVL3:
 124:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_Init */
  48              		.loc 1 124 3 is_stmt 1 view .LVU6
 124:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_Init */
  49              		.loc 1 124 10 is_stmt 0 view .LVU7
  50 0008 FBE7     		b	.L1
  51              		.cfi_endproc
  52              	.LFE132:
  54              		.section	.text.BSP_USBPD_PWR_Deinit,"ax",%progbits
  55              		.align	1
  56              		.weak	BSP_USBPD_PWR_Deinit
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	BSP_USBPD_PWR_Deinit:
  62              	.LVL4:
  63              	.LFB133:
 127:USBPD/usbpd_pwr_user.c **** 
 128:USBPD/usbpd_pwr_user.c **** /**
 129:USBPD/usbpd_pwr_user.c ****   * @brief  Global de-initialization of PWR resource used by USB-PD
 130:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 131:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 132:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 133:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 134:USBPD/usbpd_pwr_user.c ****   */
 135:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_Deinit(uint32_t Instance)
 136:USBPD/usbpd_pwr_user.c **** {
  64              		.loc 1 136 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 137:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_Deinit */
 138:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 139:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
  69              		.loc 1 139 3 view .LVU9
 140:USBPD/usbpd_pwr_user.c **** 
 141:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
  70              		.loc 1 141 3 view .LVU10
  71              		.loc 1 141 6 is_stmt 0 view .LVU11
  72 0000 00B9     		cbnz	r0, .L8
  73              	.LVL5:
  74              	.L5:
 142:USBPD/usbpd_pwr_user.c ****   {
 143:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 144:USBPD/usbpd_pwr_user.c ****   }
 145:USBPD/usbpd_pwr_user.c ****   else
 146:USBPD/usbpd_pwr_user.c ****   {
 147:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_Deinit");
 148:USBPD/usbpd_pwr_user.c ****   }
 149:USBPD/usbpd_pwr_user.c **** 
 150:USBPD/usbpd_pwr_user.c ****   return ret;
 151:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_Deinit */
 152:USBPD/usbpd_pwr_user.c **** }
  75              		.loc 1 152 1 view .LVU12
  76 0002 7047     		bx	lr
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 5


  77              	.LVL6:
  78              	.L8:
 143:USBPD/usbpd_pwr_user.c ****   }
  79              		.loc 1 143 9 view .LVU13
  80 0004 6FF00100 		mvn	r0, #1
  81              	.LVL7:
 147:USBPD/usbpd_pwr_user.c ****   }
  82              		.loc 1 147 69 is_stmt 1 view .LVU14
 150:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_Deinit */
  83              		.loc 1 150 3 view .LVU15
 150:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_Deinit */
  84              		.loc 1 150 10 is_stmt 0 view .LVU16
  85 0008 FBE7     		b	.L5
  86              		.cfi_endproc
  87              	.LFE133:
  89              		.section	.text.BSP_USBPD_PWR_SetRole,"ax",%progbits
  90              		.align	1
  91              		.weak	BSP_USBPD_PWR_SetRole
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BSP_USBPD_PWR_SetRole:
  97              	.LVL8:
  98              	.LFB134:
 153:USBPD/usbpd_pwr_user.c **** 
 154:USBPD/usbpd_pwr_user.c **** /**
 155:USBPD/usbpd_pwr_user.c ****   * @brief  Assign Power role for current Port (Source or Sink)
 156:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 157:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 158:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 159:USBPD/usbpd_pwr_user.c ****   * @param  Role Type-C port role
 160:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 161:USBPD/usbpd_pwr_user.c ****   *         @arg @ref POWER_ROLE_SOURCE
 162:USBPD/usbpd_pwr_user.c ****   *         @arg @ref POWER_ROLE_SINK
 163:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 164:USBPD/usbpd_pwr_user.c ****   */
 165:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_SetRole(uint32_t Instance, USBPD_PWR_PowerRoleTypeDef Role)
 166:USBPD/usbpd_pwr_user.c **** {
  99              		.loc 1 166 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 167:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_SetRole */
 168:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 169:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
 104              		.loc 1 169 3 view .LVU18
 170:USBPD/usbpd_pwr_user.c **** 
 171:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 105              		.loc 1 171 3 view .LVU19
 106              		.loc 1 171 6 is_stmt 0 view .LVU20
 107 0000 00B9     		cbnz	r0, .L12
 108              	.LVL9:
 109              	.L9:
 172:USBPD/usbpd_pwr_user.c ****   {
 173:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 174:USBPD/usbpd_pwr_user.c ****   }
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 6


 175:USBPD/usbpd_pwr_user.c ****   else
 176:USBPD/usbpd_pwr_user.c ****   {
 177:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_SetRole");
 178:USBPD/usbpd_pwr_user.c ****   }
 179:USBPD/usbpd_pwr_user.c **** 
 180:USBPD/usbpd_pwr_user.c ****   return ret;
 181:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_SetRole */
 182:USBPD/usbpd_pwr_user.c **** }
 110              		.loc 1 182 1 view .LVU21
 111 0002 7047     		bx	lr
 112              	.LVL10:
 113              	.L12:
 173:USBPD/usbpd_pwr_user.c ****   }
 114              		.loc 1 173 9 view .LVU22
 115 0004 6FF00100 		mvn	r0, #1
 116              	.LVL11:
 177:USBPD/usbpd_pwr_user.c ****   }
 117              		.loc 1 177 70 is_stmt 1 view .LVU23
 180:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_SetRole */
 118              		.loc 1 180 3 view .LVU24
 180:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_SetRole */
 119              		.loc 1 180 10 is_stmt 0 view .LVU25
 120 0008 FBE7     		b	.L9
 121              		.cfi_endproc
 122              	.LFE134:
 124              		.section	.text.BSP_USBPD_PWR_SetPowerMode,"ax",%progbits
 125              		.align	1
 126              		.weak	BSP_USBPD_PWR_SetPowerMode
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 131              	BSP_USBPD_PWR_SetPowerMode:
 132              	.LVL12:
 133              	.LFB135:
 183:USBPD/usbpd_pwr_user.c **** 
 184:USBPD/usbpd_pwr_user.c **** /**
 185:USBPD/usbpd_pwr_user.c ****   * @brief  Set operating mode of Port regarding power saving constraints
 186:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 187:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 188:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 189:USBPD/usbpd_pwr_user.c ****   * @param  PwrMode Type-C port power saving mode
 190:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 191:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_OFF
 192:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_HIBERNATE
 193:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_LOWPOWER
 194:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_NORMAL
 195:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 196:USBPD/usbpd_pwr_user.c ****   */
 197:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_SetPowerMode(uint32_t Instance, USBPD_PWR_PowerModeTypeDef PwrMode)
 198:USBPD/usbpd_pwr_user.c **** {
 134              		.loc 1 198 1 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 199:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_SetPowerMode */
 200:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 7


 201:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
 139              		.loc 1 201 3 view .LVU27
 202:USBPD/usbpd_pwr_user.c **** 
 203:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 140              		.loc 1 203 3 view .LVU28
 141              		.loc 1 203 6 is_stmt 0 view .LVU29
 142 0000 00B9     		cbnz	r0, .L16
 143              	.LVL13:
 144              	.L13:
 204:USBPD/usbpd_pwr_user.c ****   {
 205:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 206:USBPD/usbpd_pwr_user.c ****   }
 207:USBPD/usbpd_pwr_user.c ****   else
 208:USBPD/usbpd_pwr_user.c ****   {
 209:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_SetPowerMode");
 210:USBPD/usbpd_pwr_user.c ****   }
 211:USBPD/usbpd_pwr_user.c **** 
 212:USBPD/usbpd_pwr_user.c ****   return ret;
 213:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_SetPowerMode */
 214:USBPD/usbpd_pwr_user.c **** }
 145              		.loc 1 214 1 view .LVU30
 146 0002 7047     		bx	lr
 147              	.LVL14:
 148              	.L16:
 205:USBPD/usbpd_pwr_user.c ****   }
 149              		.loc 1 205 9 view .LVU31
 150 0004 6FF00100 		mvn	r0, #1
 151              	.LVL15:
 209:USBPD/usbpd_pwr_user.c ****   }
 152              		.loc 1 209 75 is_stmt 1 view .LVU32
 212:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_SetPowerMode */
 153              		.loc 1 212 3 view .LVU33
 212:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_SetPowerMode */
 154              		.loc 1 212 10 is_stmt 0 view .LVU34
 155 0008 FBE7     		b	.L13
 156              		.cfi_endproc
 157              	.LFE135:
 159              		.section	.text.BSP_USBPD_PWR_GetPowerMode,"ax",%progbits
 160              		.align	1
 161              		.weak	BSP_USBPD_PWR_GetPowerMode
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	BSP_USBPD_PWR_GetPowerMode:
 167              	.LVL16:
 168              	.LFB136:
 215:USBPD/usbpd_pwr_user.c **** 
 216:USBPD/usbpd_pwr_user.c **** /**
 217:USBPD/usbpd_pwr_user.c ****   * @brief  Get operating mode of Port regarding power saving constraints
 218:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 219:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 220:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 221:USBPD/usbpd_pwr_user.c ****   * @param  PwrMode Pointer on current Type-C port power saving mode value
 222:USBPD/usbpd_pwr_user.c ****   *         Following values are available :
 223:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_OFF
 224:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_HIBERNATE
 225:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_LOWPOWER
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 8


 226:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_MODE_NORMAL
 227:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 228:USBPD/usbpd_pwr_user.c ****   */
 229:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_GetPowerMode(uint32_t Instance, USBPD_PWR_PowerModeTypeDef *PwrMode)
 230:USBPD/usbpd_pwr_user.c **** {
 169              		.loc 1 230 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 231:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_GetPowerMode */
 232:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 233:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
 174              		.loc 1 233 3 view .LVU36
 234:USBPD/usbpd_pwr_user.c **** 
 235:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 175              		.loc 1 235 3 view .LVU37
 176              		.loc 1 235 6 is_stmt 0 view .LVU38
 177 0000 00B9     		cbnz	r0, .L20
 178              	.LVL17:
 179              	.L17:
 236:USBPD/usbpd_pwr_user.c ****   {
 237:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 238:USBPD/usbpd_pwr_user.c ****   }
 239:USBPD/usbpd_pwr_user.c ****   else
 240:USBPD/usbpd_pwr_user.c ****   {
 241:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_GetPowerMode");
 242:USBPD/usbpd_pwr_user.c ****   }
 243:USBPD/usbpd_pwr_user.c ****   return ret;
 244:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_GetPowerMode */
 245:USBPD/usbpd_pwr_user.c **** }
 180              		.loc 1 245 1 view .LVU39
 181 0002 7047     		bx	lr
 182              	.LVL18:
 183              	.L20:
 237:USBPD/usbpd_pwr_user.c ****   }
 184              		.loc 1 237 9 view .LVU40
 185 0004 6FF00100 		mvn	r0, #1
 186              	.LVL19:
 241:USBPD/usbpd_pwr_user.c ****   }
 187              		.loc 1 241 75 is_stmt 1 view .LVU41
 243:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_GetPowerMode */
 188              		.loc 1 243 3 view .LVU42
 243:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_GetPowerMode */
 189              		.loc 1 243 10 is_stmt 0 view .LVU43
 190 0008 FBE7     		b	.L17
 191              		.cfi_endproc
 192              	.LFE136:
 194              		.section	.text.BSP_USBPD_PWR_VBUSInit,"ax",%progbits
 195              		.align	1
 196              		.weak	BSP_USBPD_PWR_VBUSInit
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	BSP_USBPD_PWR_VBUSInit:
 202              	.LVL20:
 203              	.LFB137:
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 9


 246:USBPD/usbpd_pwr_user.c **** 
 247:USBPD/usbpd_pwr_user.c **** /**
 248:USBPD/usbpd_pwr_user.c ****   * @brief  Initialize the hardware resources used by the Type-C power delivery (PD)
 249:USBPD/usbpd_pwr_user.c ****   *         controller.
 250:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 251:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 252:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 253:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 254:USBPD/usbpd_pwr_user.c ****   */
 255:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSInit(uint32_t Instance)
 256:USBPD/usbpd_pwr_user.c **** {
 204              		.loc 1 256 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 257:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSInit */
 258:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 259:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
 209              		.loc 1 259 3 view .LVU45
 260:USBPD/usbpd_pwr_user.c **** 
 261:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 210              		.loc 1 261 3 view .LVU46
 211              		.loc 1 261 6 is_stmt 0 view .LVU47
 212 0000 00B9     		cbnz	r0, .L24
 213              	.LVL21:
 214              	.L21:
 262:USBPD/usbpd_pwr_user.c ****   {
 263:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 264:USBPD/usbpd_pwr_user.c ****   }
 265:USBPD/usbpd_pwr_user.c ****   else
 266:USBPD/usbpd_pwr_user.c ****   {
 267:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VBUSInit");
 268:USBPD/usbpd_pwr_user.c ****   }
 269:USBPD/usbpd_pwr_user.c **** 
 270:USBPD/usbpd_pwr_user.c ****   return ret;
 271:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSInit */
 272:USBPD/usbpd_pwr_user.c **** }
 215              		.loc 1 272 1 view .LVU48
 216 0002 7047     		bx	lr
 217              	.LVL22:
 218              	.L24:
 263:USBPD/usbpd_pwr_user.c ****   }
 219              		.loc 1 263 9 view .LVU49
 220 0004 6FF00100 		mvn	r0, #1
 221              	.LVL23:
 267:USBPD/usbpd_pwr_user.c ****   }
 222              		.loc 1 267 71 is_stmt 1 view .LVU50
 270:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSInit */
 223              		.loc 1 270 3 view .LVU51
 270:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSInit */
 224              		.loc 1 270 10 is_stmt 0 view .LVU52
 225 0008 FBE7     		b	.L21
 226              		.cfi_endproc
 227              	.LFE137:
 229              		.section	.text.BSP_USBPD_PWR_VBUSDeInit,"ax",%progbits
 230              		.align	1
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 10


 231              		.weak	BSP_USBPD_PWR_VBUSDeInit
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	BSP_USBPD_PWR_VBUSDeInit:
 237              	.LVL24:
 238              	.LFB138:
 273:USBPD/usbpd_pwr_user.c **** 
 274:USBPD/usbpd_pwr_user.c **** /**
 275:USBPD/usbpd_pwr_user.c ****   * @brief  Release the hardware resources used by the Type-C power delivery (PD)
 276:USBPD/usbpd_pwr_user.c ****   *         controller.
 277:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 278:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 279:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 280:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 281:USBPD/usbpd_pwr_user.c ****   */
 282:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSDeInit(uint32_t Instance)
 283:USBPD/usbpd_pwr_user.c **** {
 239              		.loc 1 283 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 284:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSDeInit */
 285:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 286:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 244              		.loc 1 286 3 view .LVU54
 287:USBPD/usbpd_pwr_user.c **** 
 288:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 245              		.loc 1 288 3 view .LVU55
 246              		.loc 1 288 6 is_stmt 0 view .LVU56
 247 0000 10B9     		cbnz	r0, .L27
 286:USBPD/usbpd_pwr_user.c **** 
 248              		.loc 1 286 11 view .LVU57
 249 0002 6FF00A00 		mvn	r0, #10
 250              	.LVL25:
 286:USBPD/usbpd_pwr_user.c **** 
 251              		.loc 1 286 11 view .LVU58
 252 0006 7047     		bx	lr
 253              	.LVL26:
 254              	.L27:
 289:USBPD/usbpd_pwr_user.c ****   {
 290:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 255              		.loc 1 290 9 view .LVU59
 256 0008 6FF00100 		mvn	r0, #1
 257              	.LVL27:
 291:USBPD/usbpd_pwr_user.c ****   }
 292:USBPD/usbpd_pwr_user.c ****   return ret;
 258              		.loc 1 292 3 is_stmt 1 view .LVU60
 293:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSDeInit */
 294:USBPD/usbpd_pwr_user.c **** }
 259              		.loc 1 294 1 is_stmt 0 view .LVU61
 260 000c 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE138:
 264              		.section	.text.BSP_USBPD_PWR_VBUSOn,"ax",%progbits
 265              		.align	1
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 11


 266              		.weak	BSP_USBPD_PWR_VBUSOn
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	BSP_USBPD_PWR_VBUSOn:
 272              	.LVL28:
 273              	.LFB139:
 295:USBPD/usbpd_pwr_user.c **** 
 296:USBPD/usbpd_pwr_user.c **** /**
 297:USBPD/usbpd_pwr_user.c ****   * @brief  Enable power supply over VBUS.
 298:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 299:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 300:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 301:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 302:USBPD/usbpd_pwr_user.c ****   */
 303:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSOn(uint32_t Instance)
 304:USBPD/usbpd_pwr_user.c **** {
 274              		.loc 1 304 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 305:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSOn */
 306:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 307:USBPD/usbpd_pwr_user.c ****   int32_t ret;
 279              		.loc 1 307 3 view .LVU63
 308:USBPD/usbpd_pwr_user.c **** 
 309:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 280              		.loc 1 309 3 view .LVU64
 281              		.loc 1 309 6 is_stmt 0 view .LVU65
 282 0000 10B1     		cbz	r0, .L30
 310:USBPD/usbpd_pwr_user.c ****   {
 311:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 283              		.loc 1 311 9 view .LVU66
 284 0002 6FF00100 		mvn	r0, #1
 285              	.LVL29:
 286              		.loc 1 311 9 view .LVU67
 287 0006 7047     		bx	lr
 288              	.LVL30:
 289              	.L30:
 312:USBPD/usbpd_pwr_user.c ****   }
 313:USBPD/usbpd_pwr_user.c ****   else
 314:USBPD/usbpd_pwr_user.c ****   {
 315:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 290              		.loc 1 315 9 view .LVU68
 291 0008 6FF00A00 		mvn	r0, #10
 292              	.LVL31:
 316:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VBUSOn");
 293              		.loc 1 316 69 is_stmt 1 view .LVU69
 317:USBPD/usbpd_pwr_user.c ****   }
 318:USBPD/usbpd_pwr_user.c ****   return ret;
 294              		.loc 1 318 3 view .LVU70
 319:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSOn */
 320:USBPD/usbpd_pwr_user.c **** }
 295              		.loc 1 320 1 is_stmt 0 view .LVU71
 296 000c 7047     		bx	lr
 297              		.cfi_endproc
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 12


 298              	.LFE139:
 300              		.section	.text.BSP_USBPD_PWR_VBUSOff,"ax",%progbits
 301              		.align	1
 302              		.weak	BSP_USBPD_PWR_VBUSOff
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	BSP_USBPD_PWR_VBUSOff:
 308              	.LVL32:
 309              	.LFB140:
 321:USBPD/usbpd_pwr_user.c **** 
 322:USBPD/usbpd_pwr_user.c **** /**
 323:USBPD/usbpd_pwr_user.c ****   * @brief  Disable power supply over VBUS.
 324:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 325:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 326:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 327:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 328:USBPD/usbpd_pwr_user.c ****   */
 329:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSOff(uint32_t Instance)
 330:USBPD/usbpd_pwr_user.c **** {
 310              		.loc 1 330 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 331:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSOff */
 332:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 333:USBPD/usbpd_pwr_user.c ****   int32_t ret;
 315              		.loc 1 333 3 view .LVU73
 334:USBPD/usbpd_pwr_user.c **** 
 335:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 316              		.loc 1 335 3 view .LVU74
 317              		.loc 1 335 6 is_stmt 0 view .LVU75
 318 0000 10B1     		cbz	r0, .L33
 336:USBPD/usbpd_pwr_user.c ****   {
 337:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 319              		.loc 1 337 9 view .LVU76
 320 0002 6FF00100 		mvn	r0, #1
 321              	.LVL33:
 322              		.loc 1 337 9 view .LVU77
 323 0006 7047     		bx	lr
 324              	.LVL34:
 325              	.L33:
 338:USBPD/usbpd_pwr_user.c ****   }
 339:USBPD/usbpd_pwr_user.c ****   else
 340:USBPD/usbpd_pwr_user.c ****   {
 341:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 326              		.loc 1 341 9 view .LVU78
 327 0008 6FF00A00 		mvn	r0, #10
 328              	.LVL35:
 342:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VBUSOff");
 329              		.loc 1 342 70 is_stmt 1 view .LVU79
 343:USBPD/usbpd_pwr_user.c ****   }
 344:USBPD/usbpd_pwr_user.c ****   return ret;
 330              		.loc 1 344 3 view .LVU80
 345:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSOff */
 346:USBPD/usbpd_pwr_user.c **** }
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 13


 331              		.loc 1 346 1 is_stmt 0 view .LVU81
 332 000c 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE140:
 336              		.section	.text.BSP_USBPD_PWR_VBUSSetVoltage_Fixed,"ax",%progbits
 337              		.align	1
 338              		.weak	BSP_USBPD_PWR_VBUSSetVoltage_Fixed
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	BSP_USBPD_PWR_VBUSSetVoltage_Fixed:
 344              	.LVL36:
 345              	.LFB141:
 347:USBPD/usbpd_pwr_user.c **** 
 348:USBPD/usbpd_pwr_user.c **** /**
 349:USBPD/usbpd_pwr_user.c ****   * @brief  Set a fixed/variable PDO and manage the power control.
 350:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 351:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 352:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 353:USBPD/usbpd_pwr_user.c ****   * @param  VbusTargetInmv the vbus Target (in mV)
 354:USBPD/usbpd_pwr_user.c ****   * @param  OperatingCurrent the Operating Current (in mA)
 355:USBPD/usbpd_pwr_user.c ****   * @param  MaxOperatingCurrent the Max Operating Current (in mA)
 356:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 357:USBPD/usbpd_pwr_user.c ****   */
 358:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSSetVoltage_Fixed(uint32_t Instance,
 359:USBPD/usbpd_pwr_user.c ****                                            uint32_t VbusTargetInmv,
 360:USBPD/usbpd_pwr_user.c ****                                            uint32_t OperatingCurrent,
 361:USBPD/usbpd_pwr_user.c ****                                            uint32_t MaxOperatingCurrent)
 362:USBPD/usbpd_pwr_user.c **** {
 346              		.loc 1 362 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 363:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSSetVoltage_Fixed */
 364:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 365:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
 351              		.loc 1 365 3 view .LVU83
 366:USBPD/usbpd_pwr_user.c **** 
 367:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 352              		.loc 1 367 3 view .LVU84
 353              		.loc 1 367 6 is_stmt 0 view .LVU85
 354 0000 00B9     		cbnz	r0, .L37
 355              	.LVL37:
 356              	.L34:
 368:USBPD/usbpd_pwr_user.c ****   {
 369:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 370:USBPD/usbpd_pwr_user.c ****   }
 371:USBPD/usbpd_pwr_user.c ****   return ret;
 372:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSSetVoltage_Fixed */
 373:USBPD/usbpd_pwr_user.c **** }
 357              		.loc 1 373 1 view .LVU86
 358 0002 7047     		bx	lr
 359              	.LVL38:
 360              	.L37:
 369:USBPD/usbpd_pwr_user.c ****   }
 361              		.loc 1 369 9 view .LVU87
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 14


 362 0004 6FF00100 		mvn	r0, #1
 363              	.LVL39:
 371:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSSetVoltage_Fixed */
 364              		.loc 1 371 3 is_stmt 1 view .LVU88
 371:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSSetVoltage_Fixed */
 365              		.loc 1 371 10 is_stmt 0 view .LVU89
 366 0008 FBE7     		b	.L34
 367              		.cfi_endproc
 368              	.LFE141:
 370              		.section	.text.BSP_USBPD_PWR_VBUSSetVoltage_Variable,"ax",%progbits
 371              		.align	1
 372              		.weak	BSP_USBPD_PWR_VBUSSetVoltage_Variable
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	BSP_USBPD_PWR_VBUSSetVoltage_Variable:
 378              	.LVL40:
 379              	.LFB142:
 374:USBPD/usbpd_pwr_user.c **** 
 375:USBPD/usbpd_pwr_user.c **** /**
 376:USBPD/usbpd_pwr_user.c ****   * @brief  Set a fixed/variable PDO and manage the power control.
 377:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 378:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 379:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 380:USBPD/usbpd_pwr_user.c ****   * @param  VbusTargetMinInmv the vbus Target min (in mV)
 381:USBPD/usbpd_pwr_user.c ****   * @param  VbusTargetMaxInmv the vbus Target max (in mV)
 382:USBPD/usbpd_pwr_user.c ****   * @param  OperatingCurrent the Operating Current (in mA)
 383:USBPD/usbpd_pwr_user.c ****   * @param  MaxOperatingCurrent the Max Operating Current (in mA)
 384:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 385:USBPD/usbpd_pwr_user.c ****   */
 386:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSSetVoltage_Variable(uint32_t Instance,
 387:USBPD/usbpd_pwr_user.c ****                                               uint32_t VbusTargetMinInmv,
 388:USBPD/usbpd_pwr_user.c ****                                               uint32_t VbusTargetMaxInmv,
 389:USBPD/usbpd_pwr_user.c ****                                               uint32_t OperatingCurrent,
 390:USBPD/usbpd_pwr_user.c ****                                               uint32_t MaxOperatingCurrent)
 391:USBPD/usbpd_pwr_user.c **** {
 380              		.loc 1 391 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 4, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 392:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSSetVoltage_Variable */
 393:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 394:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 385              		.loc 1 394 3 view .LVU91
 395:USBPD/usbpd_pwr_user.c **** 
 396:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 386              		.loc 1 396 3 view .LVU92
 387              		.loc 1 396 6 is_stmt 0 view .LVU93
 388 0000 10B9     		cbnz	r0, .L40
 394:USBPD/usbpd_pwr_user.c **** 
 389              		.loc 1 394 11 view .LVU94
 390 0002 6FF00A00 		mvn	r0, #10
 391              	.LVL41:
 394:USBPD/usbpd_pwr_user.c **** 
 392              		.loc 1 394 11 view .LVU95
 393 0006 7047     		bx	lr
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 15


 394              	.LVL42:
 395              	.L40:
 397:USBPD/usbpd_pwr_user.c ****   {
 398:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 396              		.loc 1 398 9 view .LVU96
 397 0008 6FF00100 		mvn	r0, #1
 398              	.LVL43:
 399:USBPD/usbpd_pwr_user.c ****   }
 400:USBPD/usbpd_pwr_user.c ****   return ret;
 399              		.loc 1 400 3 is_stmt 1 view .LVU97
 401:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSSetVoltage_Variable */
 402:USBPD/usbpd_pwr_user.c **** }
 400              		.loc 1 402 1 is_stmt 0 view .LVU98
 401 000c 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE142:
 405              		.section	.text.BSP_USBPD_PWR_VBUSSetVoltage_Battery,"ax",%progbits
 406              		.align	1
 407              		.weak	BSP_USBPD_PWR_VBUSSetVoltage_Battery
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	BSP_USBPD_PWR_VBUSSetVoltage_Battery:
 413              	.LVL44:
 414              	.LFB143:
 403:USBPD/usbpd_pwr_user.c **** 
 404:USBPD/usbpd_pwr_user.c **** /**
 405:USBPD/usbpd_pwr_user.c ****   * @brief  Set a Battery PDO and manage the power control.
 406:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 407:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 408:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 409:USBPD/usbpd_pwr_user.c ****   * @param  VbusTargetMin the vbus Target min (in mV)
 410:USBPD/usbpd_pwr_user.c ****   * @param  VbusTargetMax the vbus Target max (in mV)
 411:USBPD/usbpd_pwr_user.c ****   * @param  OperatingPower the Operating Power (in mW)
 412:USBPD/usbpd_pwr_user.c ****   * @param  MaxOperatingPower the Max Operating Power (in mW)
 413:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 414:USBPD/usbpd_pwr_user.c ****   */
 415:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSSetVoltage_Battery(uint32_t Instance,
 416:USBPD/usbpd_pwr_user.c ****                                              uint32_t VbusTargetMin,
 417:USBPD/usbpd_pwr_user.c ****                                              uint32_t VbusTargetMax,
 418:USBPD/usbpd_pwr_user.c ****                                              uint32_t OperatingPower,
 419:USBPD/usbpd_pwr_user.c ****                                              uint32_t MaxOperatingPower)
 420:USBPD/usbpd_pwr_user.c **** {
 415              		.loc 1 420 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 4, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 421:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSSetVoltage_Battery */
 422:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 423:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 420              		.loc 1 423 3 view .LVU100
 424:USBPD/usbpd_pwr_user.c **** 
 425:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 421              		.loc 1 425 3 view .LVU101
 422              		.loc 1 425 6 is_stmt 0 view .LVU102
 423 0000 10B9     		cbnz	r0, .L43
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 16


 423:USBPD/usbpd_pwr_user.c **** 
 424              		.loc 1 423 11 view .LVU103
 425 0002 6FF00A00 		mvn	r0, #10
 426              	.LVL45:
 423:USBPD/usbpd_pwr_user.c **** 
 427              		.loc 1 423 11 view .LVU104
 428 0006 7047     		bx	lr
 429              	.LVL46:
 430              	.L43:
 426:USBPD/usbpd_pwr_user.c ****   {
 427:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 431              		.loc 1 427 9 view .LVU105
 432 0008 6FF00100 		mvn	r0, #1
 433              	.LVL47:
 428:USBPD/usbpd_pwr_user.c ****   }
 429:USBPD/usbpd_pwr_user.c ****   return ret;
 434              		.loc 1 429 3 is_stmt 1 view .LVU106
 430:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSSetVoltage_Battery */
 431:USBPD/usbpd_pwr_user.c **** }
 435              		.loc 1 431 1 is_stmt 0 view .LVU107
 436 000c 7047     		bx	lr
 437              		.cfi_endproc
 438              	.LFE143:
 440              		.section	.text.BSP_USBPD_PWR_VBUSSetVoltage_APDO,"ax",%progbits
 441              		.align	1
 442              		.weak	BSP_USBPD_PWR_VBUSSetVoltage_APDO
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 447              	BSP_USBPD_PWR_VBUSSetVoltage_APDO:
 448              	.LVL48:
 449              	.LFB144:
 432:USBPD/usbpd_pwr_user.c **** 
 433:USBPD/usbpd_pwr_user.c **** /**
 434:USBPD/usbpd_pwr_user.c ****   * @brief  Set a APDO and manage the power control.
 435:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 436:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 437:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 438:USBPD/usbpd_pwr_user.c ****   * @param  VbusTargetInmv the vbus Target (in mV)
 439:USBPD/usbpd_pwr_user.c ****   * @param  OperatingCurrent the Operating current (in mA)
 440:USBPD/usbpd_pwr_user.c ****   * @param  Delta Delta between with previous APDO (in mV), 0 means APDO start
 441:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 442:USBPD/usbpd_pwr_user.c ****   */
 443:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSSetVoltage_APDO(uint32_t Instance,
 444:USBPD/usbpd_pwr_user.c ****                                           uint32_t VbusTargetInmv,
 445:USBPD/usbpd_pwr_user.c ****                                           uint32_t OperatingCurrent,
 446:USBPD/usbpd_pwr_user.c ****                                           int32_t Delta)
 447:USBPD/usbpd_pwr_user.c **** {
 450              		.loc 1 447 1 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 448:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSSetVoltage_APDO */
 449:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 450:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 455              		.loc 1 450 3 view .LVU109
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 17


 451:USBPD/usbpd_pwr_user.c **** 
 452:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 456              		.loc 1 452 3 view .LVU110
 457              		.loc 1 452 6 is_stmt 0 view .LVU111
 458 0000 10B9     		cbnz	r0, .L46
 450:USBPD/usbpd_pwr_user.c **** 
 459              		.loc 1 450 11 view .LVU112
 460 0002 6FF00A00 		mvn	r0, #10
 461              	.LVL49:
 450:USBPD/usbpd_pwr_user.c **** 
 462              		.loc 1 450 11 view .LVU113
 463 0006 7047     		bx	lr
 464              	.LVL50:
 465              	.L46:
 453:USBPD/usbpd_pwr_user.c ****   {
 454:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 466              		.loc 1 454 9 view .LVU114
 467 0008 6FF00100 		mvn	r0, #1
 468              	.LVL51:
 455:USBPD/usbpd_pwr_user.c ****   }
 456:USBPD/usbpd_pwr_user.c ****   return ret;
 469              		.loc 1 456 3 is_stmt 1 view .LVU115
 457:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSSetVoltage_APDO */
 458:USBPD/usbpd_pwr_user.c **** }
 470              		.loc 1 458 1 is_stmt 0 view .LVU116
 471 000c 7047     		bx	lr
 472              		.cfi_endproc
 473              	.LFE144:
 475              		.section	.text.BSP_USBPD_PWR_VBUSGetVoltage,"ax",%progbits
 476              		.align	1
 477              		.weak	BSP_USBPD_PWR_VBUSGetVoltage
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 482              	BSP_USBPD_PWR_VBUSGetVoltage:
 483              	.LVL52:
 484              	.LFB145:
 459:USBPD/usbpd_pwr_user.c **** 
 460:USBPD/usbpd_pwr_user.c **** /**
 461:USBPD/usbpd_pwr_user.c ****   * @brief  Get actual voltage level measured on the VBUS line.
 462:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 463:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 464:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 465:USBPD/usbpd_pwr_user.c ****   * @param  pVoltage Pointer on measured voltage level (in mV)
 466:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 467:USBPD/usbpd_pwr_user.c ****   */
 468:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSGetVoltage(uint32_t Instance, uint32_t *pVoltage)
 469:USBPD/usbpd_pwr_user.c **** {
 485              		.loc 1 469 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 470:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSGetVoltage */
 471:USBPD/usbpd_pwr_user.c **** 
 472:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 473:USBPD/usbpd_pwr_user.c ****   int32_t ret;
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 18


 490              		.loc 1 473 3 view .LVU118
 474:USBPD/usbpd_pwr_user.c ****   uint32_t val = 0U;
 491              		.loc 1 474 3 view .LVU119
 475:USBPD/usbpd_pwr_user.c **** 
 476:USBPD/usbpd_pwr_user.c ****   if ((Instance >= USBPD_PWR_INSTANCES_NBR) || (NULL == pVoltage))
 492              		.loc 1 476 3 view .LVU120
 493              		.loc 1 476 6 is_stmt 0 view .LVU121
 494 0000 30B9     		cbnz	r0, .L49
 495              		.loc 1 476 45 discriminator 1 view .LVU122
 496 0002 11B1     		cbz	r1, .L51
 477:USBPD/usbpd_pwr_user.c ****   {
 478:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 479:USBPD/usbpd_pwr_user.c ****   }
 480:USBPD/usbpd_pwr_user.c ****   else
 481:USBPD/usbpd_pwr_user.c ****   {
 482:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 497              		.loc 1 482 9 view .LVU123
 498 0004 6FF00A00 		mvn	r0, #10
 499              	.LVL53:
 500              		.loc 1 482 9 view .LVU124
 501 0008 04E0     		b	.L48
 502              	.LVL54:
 503              	.L51:
 478:USBPD/usbpd_pwr_user.c ****   }
 504              		.loc 1 478 9 view .LVU125
 505 000a 6FF00100 		mvn	r0, #1
 506              	.LVL55:
 478:USBPD/usbpd_pwr_user.c ****   }
 507              		.loc 1 478 9 view .LVU126
 508 000e 01E0     		b	.L48
 509              	.LVL56:
 510              	.L49:
 478:USBPD/usbpd_pwr_user.c ****   }
 511              		.loc 1 478 9 view .LVU127
 512 0010 6FF00100 		mvn	r0, #1
 513              	.LVL57:
 514              	.L48:
 483:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VBUSGetVoltage");
 515              		.loc 1 483 77 is_stmt 1 view .LVU128
 484:USBPD/usbpd_pwr_user.c ****   }
 485:USBPD/usbpd_pwr_user.c ****   *pVoltage = val;
 516              		.loc 1 485 3 view .LVU129
 517              		.loc 1 485 13 is_stmt 0 view .LVU130
 518 0014 0023     		movs	r3, #0
 519 0016 0B60     		str	r3, [r1]
 486:USBPD/usbpd_pwr_user.c ****   return ret;
 520              		.loc 1 486 3 is_stmt 1 view .LVU131
 487:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSGetVoltage */
 488:USBPD/usbpd_pwr_user.c **** }
 521              		.loc 1 488 1 is_stmt 0 view .LVU132
 522 0018 7047     		bx	lr
 523              		.cfi_endproc
 524              	.LFE145:
 526              		.section	.text.BSP_USBPD_PWR_VBUSGetCurrent,"ax",%progbits
 527              		.align	1
 528              		.weak	BSP_USBPD_PWR_VBUSGetCurrent
 529              		.syntax unified
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 19


 530              		.thumb
 531              		.thumb_func
 533              	BSP_USBPD_PWR_VBUSGetCurrent:
 534              	.LVL58:
 535              	.LFB146:
 489:USBPD/usbpd_pwr_user.c **** 
 490:USBPD/usbpd_pwr_user.c **** /**
 491:USBPD/usbpd_pwr_user.c ****   * @brief  Get actual current level measured on the VBUS line.
 492:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 493:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 494:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 495:USBPD/usbpd_pwr_user.c ****   * @param  pCurrent Pointer on measured current level (in mA)
 496:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 497:USBPD/usbpd_pwr_user.c ****   */
 498:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSGetCurrent(uint32_t Instance, int32_t *pCurrent)
 499:USBPD/usbpd_pwr_user.c **** {
 536              		.loc 1 499 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 500:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSGetCurrent */
 501:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 502:USBPD/usbpd_pwr_user.c ****   int32_t ret;
 541              		.loc 1 502 3 view .LVU134
 503:USBPD/usbpd_pwr_user.c **** 
 504:USBPD/usbpd_pwr_user.c ****   if ((Instance >= USBPD_PWR_INSTANCES_NBR) || (NULL == pCurrent))
 542              		.loc 1 504 3 view .LVU135
 543              		.loc 1 504 6 is_stmt 0 view .LVU136
 544 0000 28B9     		cbnz	r0, .L54
 545              		.loc 1 504 45 discriminator 1 view .LVU137
 546 0002 39B1     		cbz	r1, .L55
 505:USBPD/usbpd_pwr_user.c ****   {
 506:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 507:USBPD/usbpd_pwr_user.c ****   }
 508:USBPD/usbpd_pwr_user.c ****   else
 509:USBPD/usbpd_pwr_user.c ****   {
 510:USBPD/usbpd_pwr_user.c ****     *pCurrent = 0;
 547              		.loc 1 510 5 is_stmt 1 view .LVU138
 548              		.loc 1 510 15 is_stmt 0 view .LVU139
 549 0004 0023     		movs	r3, #0
 550 0006 0B60     		str	r3, [r1]
 511:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 551              		.loc 1 511 5 is_stmt 1 view .LVU140
 552              	.LVL59:
 553              		.loc 1 511 9 is_stmt 0 view .LVU141
 554 0008 6FF00A00 		mvn	r0, #10
 555              	.LVL60:
 556              		.loc 1 511 9 view .LVU142
 557 000c 7047     		bx	lr
 558              	.LVL61:
 559              	.L54:
 506:USBPD/usbpd_pwr_user.c ****   }
 560              		.loc 1 506 9 view .LVU143
 561 000e 6FF00100 		mvn	r0, #1
 562              	.LVL62:
 506:USBPD/usbpd_pwr_user.c ****   }
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 20


 563              		.loc 1 506 9 view .LVU144
 564 0012 7047     		bx	lr
 565              	.LVL63:
 566              	.L55:
 506:USBPD/usbpd_pwr_user.c ****   }
 567              		.loc 1 506 9 view .LVU145
 568 0014 6FF00100 		mvn	r0, #1
 569              	.LVL64:
 512:USBPD/usbpd_pwr_user.c ****   }
 513:USBPD/usbpd_pwr_user.c ****   return ret;
 570              		.loc 1 513 3 is_stmt 1 view .LVU146
 514:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSGetCurrent */
 515:USBPD/usbpd_pwr_user.c **** }
 571              		.loc 1 515 1 is_stmt 0 view .LVU147
 572 0018 7047     		bx	lr
 573              		.cfi_endproc
 574              	.LFE146:
 576              		.section	.text.BSP_USBPD_PWR_VCONNInit,"ax",%progbits
 577              		.align	1
 578              		.weak	BSP_USBPD_PWR_VCONNInit
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 583              	BSP_USBPD_PWR_VCONNInit:
 584              	.LVL65:
 585              	.LFB147:
 516:USBPD/usbpd_pwr_user.c **** 
 517:USBPD/usbpd_pwr_user.c **** /**
 518:USBPD/usbpd_pwr_user.c ****   * @brief  Initialize VCONN sourcing.
 519:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 520:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 521:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 522:USBPD/usbpd_pwr_user.c ****   * @param  CCPinId Type-C CC pin identifier
 523:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 524:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC1
 525:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC2
 526:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 527:USBPD/usbpd_pwr_user.c ****   */
 528:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VCONNInit(uint32_t Instance,
 529:USBPD/usbpd_pwr_user.c ****                                 uint32_t CCPinId)
 530:USBPD/usbpd_pwr_user.c **** {
 586              		.loc 1 530 1 is_stmt 1 view -0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 531:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VCONNInit */
 532:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 533:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 591              		.loc 1 533 3 view .LVU149
 534:USBPD/usbpd_pwr_user.c **** 
 535:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 592              		.loc 1 535 3 view .LVU150
 593              		.loc 1 535 6 is_stmt 0 view .LVU151
 594 0000 10B9     		cbnz	r0, .L58
 533:USBPD/usbpd_pwr_user.c **** 
 595              		.loc 1 533 11 view .LVU152
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 21


 596 0002 6FF00A00 		mvn	r0, #10
 597              	.LVL66:
 533:USBPD/usbpd_pwr_user.c **** 
 598              		.loc 1 533 11 view .LVU153
 599 0006 7047     		bx	lr
 600              	.LVL67:
 601              	.L58:
 536:USBPD/usbpd_pwr_user.c ****   {
 537:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 602              		.loc 1 537 9 view .LVU154
 603 0008 6FF00100 		mvn	r0, #1
 604              	.LVL68:
 538:USBPD/usbpd_pwr_user.c ****   }
 539:USBPD/usbpd_pwr_user.c ****   return ret;
 605              		.loc 1 539 3 is_stmt 1 view .LVU155
 540:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VCONNInit */
 541:USBPD/usbpd_pwr_user.c **** }
 606              		.loc 1 541 1 is_stmt 0 view .LVU156
 607 000c 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE147:
 611              		.section	.text.BSP_USBPD_PWR_VCONNDeInit,"ax",%progbits
 612              		.align	1
 613              		.weak	BSP_USBPD_PWR_VCONNDeInit
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 618              	BSP_USBPD_PWR_VCONNDeInit:
 619              	.LVL69:
 620              	.LFB148:
 542:USBPD/usbpd_pwr_user.c **** 
 543:USBPD/usbpd_pwr_user.c **** /**
 544:USBPD/usbpd_pwr_user.c ****   * @brief  Un-Initialize VCONN sourcing.
 545:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 546:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 547:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 548:USBPD/usbpd_pwr_user.c ****   * @param  CCPinId Type-C CC pin identifier
 549:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 550:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC1
 551:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC2
 552:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 553:USBPD/usbpd_pwr_user.c ****   */
 554:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VCONNDeInit(uint32_t Instance,
 555:USBPD/usbpd_pwr_user.c ****                                   uint32_t CCPinId)
 556:USBPD/usbpd_pwr_user.c **** {
 621              		.loc 1 556 1 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 557:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VCONNDeInit */
 558:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 559:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 626              		.loc 1 559 3 view .LVU158
 560:USBPD/usbpd_pwr_user.c **** 
 561:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 627              		.loc 1 561 3 view .LVU159
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 22


 628              		.loc 1 561 6 is_stmt 0 view .LVU160
 629 0000 10B9     		cbnz	r0, .L61
 559:USBPD/usbpd_pwr_user.c **** 
 630              		.loc 1 559 11 view .LVU161
 631 0002 6FF00A00 		mvn	r0, #10
 632              	.LVL70:
 559:USBPD/usbpd_pwr_user.c **** 
 633              		.loc 1 559 11 view .LVU162
 634 0006 7047     		bx	lr
 635              	.LVL71:
 636              	.L61:
 562:USBPD/usbpd_pwr_user.c ****   {
 563:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 637              		.loc 1 563 9 view .LVU163
 638 0008 6FF00100 		mvn	r0, #1
 639              	.LVL72:
 564:USBPD/usbpd_pwr_user.c ****   }
 565:USBPD/usbpd_pwr_user.c ****   return ret;
 640              		.loc 1 565 3 is_stmt 1 view .LVU164
 566:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VCONNDeInit */
 567:USBPD/usbpd_pwr_user.c **** }
 641              		.loc 1 567 1 is_stmt 0 view .LVU165
 642 000c 7047     		bx	lr
 643              		.cfi_endproc
 644              	.LFE148:
 646              		.section	.text.BSP_USBPD_PWR_VCONNOn,"ax",%progbits
 647              		.align	1
 648              		.weak	BSP_USBPD_PWR_VCONNOn
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 653              	BSP_USBPD_PWR_VCONNOn:
 654              	.LVL73:
 655              	.LFB149:
 568:USBPD/usbpd_pwr_user.c **** 
 569:USBPD/usbpd_pwr_user.c **** /**
 570:USBPD/usbpd_pwr_user.c ****   * @brief  Enable VCONN sourcing.
 571:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 572:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 573:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 574:USBPD/usbpd_pwr_user.c ****   * @param  CCPinId Type-C CC pin identifier
 575:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 576:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC1
 577:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC2
 578:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 579:USBPD/usbpd_pwr_user.c ****   */
 580:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VCONNOn(uint32_t Instance,
 581:USBPD/usbpd_pwr_user.c ****                               uint32_t CCPinId)
 582:USBPD/usbpd_pwr_user.c **** {
 656              		.loc 1 582 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 583:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VCONNOn */
 584:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 585:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 23


 661              		.loc 1 585 3 view .LVU167
 586:USBPD/usbpd_pwr_user.c **** 
 587:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 662              		.loc 1 587 3 view .LVU168
 663              		.loc 1 587 6 is_stmt 0 view .LVU169
 664 0000 10B9     		cbnz	r0, .L64
 585:USBPD/usbpd_pwr_user.c **** 
 665              		.loc 1 585 11 view .LVU170
 666 0002 6FF00A00 		mvn	r0, #10
 667              	.LVL74:
 585:USBPD/usbpd_pwr_user.c **** 
 668              		.loc 1 585 11 view .LVU171
 669 0006 7047     		bx	lr
 670              	.LVL75:
 671              	.L64:
 588:USBPD/usbpd_pwr_user.c ****   {
 589:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 672              		.loc 1 589 9 view .LVU172
 673 0008 6FF00100 		mvn	r0, #1
 674              	.LVL76:
 590:USBPD/usbpd_pwr_user.c ****   }
 591:USBPD/usbpd_pwr_user.c ****   return ret;
 675              		.loc 1 591 3 is_stmt 1 view .LVU173
 592:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VCONNOn */
 593:USBPD/usbpd_pwr_user.c **** }
 676              		.loc 1 593 1 is_stmt 0 view .LVU174
 677 000c 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE149:
 681              		.section	.text.BSP_USBPD_PWR_VCONNOff,"ax",%progbits
 682              		.align	1
 683              		.weak	BSP_USBPD_PWR_VCONNOff
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 688              	BSP_USBPD_PWR_VCONNOff:
 689              	.LVL77:
 690              	.LFB150:
 594:USBPD/usbpd_pwr_user.c **** 
 595:USBPD/usbpd_pwr_user.c **** /**
 596:USBPD/usbpd_pwr_user.c ****   * @brief  Disable VCONN sourcing.
 597:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 598:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 599:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 600:USBPD/usbpd_pwr_user.c ****   * @param  CCPinId CC pin identifier
 601:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 602:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC1
 603:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC2
 604:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 605:USBPD/usbpd_pwr_user.c ****   */
 606:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VCONNOff(uint32_t Instance,
 607:USBPD/usbpd_pwr_user.c ****                                uint32_t CCPinId)
 608:USBPD/usbpd_pwr_user.c **** {
 691              		.loc 1 608 1 is_stmt 1 view -0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 24


 695              		@ link register save eliminated.
 609:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VCONNOff */
 610:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 611:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 696              		.loc 1 611 3 view .LVU176
 612:USBPD/usbpd_pwr_user.c **** 
 613:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 697              		.loc 1 613 3 view .LVU177
 698              		.loc 1 613 6 is_stmt 0 view .LVU178
 699 0000 10B9     		cbnz	r0, .L67
 611:USBPD/usbpd_pwr_user.c **** 
 700              		.loc 1 611 11 view .LVU179
 701 0002 6FF00A00 		mvn	r0, #10
 702              	.LVL78:
 611:USBPD/usbpd_pwr_user.c **** 
 703              		.loc 1 611 11 view .LVU180
 704 0006 7047     		bx	lr
 705              	.LVL79:
 706              	.L67:
 614:USBPD/usbpd_pwr_user.c ****   {
 615:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 707              		.loc 1 615 9 view .LVU181
 708 0008 6FF00100 		mvn	r0, #1
 709              	.LVL80:
 616:USBPD/usbpd_pwr_user.c ****   }
 617:USBPD/usbpd_pwr_user.c ****   return ret;
 710              		.loc 1 617 3 is_stmt 1 view .LVU182
 618:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VCONNOff */
 619:USBPD/usbpd_pwr_user.c **** }
 711              		.loc 1 619 1 is_stmt 0 view .LVU183
 712 000c 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE150:
 716              		.section	.text.BSP_USBPD_PWR_VCONNIsOn,"ax",%progbits
 717              		.align	1
 718              		.weak	BSP_USBPD_PWR_VCONNIsOn
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 723              	BSP_USBPD_PWR_VCONNIsOn:
 724              	.LVL81:
 725              	.LFB151:
 620:USBPD/usbpd_pwr_user.c **** 
 621:USBPD/usbpd_pwr_user.c **** /**
 622:USBPD/usbpd_pwr_user.c ****   * @brief  Get actual VCONN status.
 623:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 624:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 625:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 626:USBPD/usbpd_pwr_user.c ****   * @param  CCPinId Type-C CC pin identifier
 627:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 628:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC1
 629:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_CC2
 630:USBPD/usbpd_pwr_user.c ****   * @param  pState VCONN status (1: On, 0: Off)
 631:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 632:USBPD/usbpd_pwr_user.c ****   */
 633:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VCONNIsOn(uint32_t Instance,
 634:USBPD/usbpd_pwr_user.c ****                                 uint32_t CCPinId, uint8_t *pState)
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 25


 635:USBPD/usbpd_pwr_user.c **** {
 726              		.loc 1 635 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 636:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VCONNIsOn */
 637:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 638:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 731              		.loc 1 638 3 view .LVU185
 639:USBPD/usbpd_pwr_user.c **** 
 640:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 732              		.loc 1 640 3 view .LVU186
 733              		.loc 1 640 6 is_stmt 0 view .LVU187
 734 0000 20B9     		cbnz	r0, .L70
 638:USBPD/usbpd_pwr_user.c **** 
 735              		.loc 1 638 11 view .LVU188
 736 0002 6FF00A00 		mvn	r0, #10
 737              	.LVL82:
 738              	.L69:
 641:USBPD/usbpd_pwr_user.c ****   {
 642:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 643:USBPD/usbpd_pwr_user.c ****   }
 644:USBPD/usbpd_pwr_user.c ****   *pState = 0u;
 739              		.loc 1 644 3 is_stmt 1 view .LVU189
 740              		.loc 1 644 11 is_stmt 0 view .LVU190
 741 0006 0023     		movs	r3, #0
 742 0008 1370     		strb	r3, [r2]
 645:USBPD/usbpd_pwr_user.c ****   return ret;
 743              		.loc 1 645 3 is_stmt 1 view .LVU191
 646:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VCONNIsOn */
 647:USBPD/usbpd_pwr_user.c **** }
 744              		.loc 1 647 1 is_stmt 0 view .LVU192
 745 000a 7047     		bx	lr
 746              	.LVL83:
 747              	.L70:
 642:USBPD/usbpd_pwr_user.c ****   }
 748              		.loc 1 642 9 view .LVU193
 749 000c 6FF00100 		mvn	r0, #1
 750              	.LVL84:
 642:USBPD/usbpd_pwr_user.c ****   }
 751              		.loc 1 642 9 view .LVU194
 752 0010 F9E7     		b	.L69
 753              		.cfi_endproc
 754              	.LFE151:
 756              		.section	.text.BSP_USBPD_PWR_SetVBUSDisconnectionThreshold,"ax",%progbits
 757              		.align	1
 758              		.weak	BSP_USBPD_PWR_SetVBUSDisconnectionThreshold
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 763              	BSP_USBPD_PWR_SetVBUSDisconnectionThreshold:
 764              	.LVL85:
 765              	.LFB152:
 648:USBPD/usbpd_pwr_user.c **** 
 649:USBPD/usbpd_pwr_user.c **** /**
 650:USBPD/usbpd_pwr_user.c ****   * @brief  Set the VBUS disconnection voltage threshold.
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 26


 651:USBPD/usbpd_pwr_user.c ****   * @note   Callback function registered through BSP_USBPD_PWR_RegisterVBUSDetectCallback
 652:USBPD/usbpd_pwr_user.c ****   *         function call is invoked when VBUS falls below programmed threshold.
 653:USBPD/usbpd_pwr_user.c ****   * @note   By default VBUS disconnection threshold is set to 3.3V
 654:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 655:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 656:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 657:USBPD/usbpd_pwr_user.c ****   * @param  VoltageThreshold VBUS disconnection voltage threshold (in mV)
 658:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 659:USBPD/usbpd_pwr_user.c ****   */
 660:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_SetVBUSDisconnectionThreshold(uint32_t Instance,
 661:USBPD/usbpd_pwr_user.c ****                                                     uint32_t VoltageThreshold)
 662:USBPD/usbpd_pwr_user.c **** {
 766              		.loc 1 662 1 is_stmt 1 view -0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 663:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_SetVBUSDisconnectionThreshold */
 664:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 665:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 771              		.loc 1 665 3 view .LVU196
 666:USBPD/usbpd_pwr_user.c **** 
 667:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 772              		.loc 1 667 3 view .LVU197
 773              		.loc 1 667 6 is_stmt 0 view .LVU198
 774 0000 10B9     		cbnz	r0, .L73
 665:USBPD/usbpd_pwr_user.c **** 
 775              		.loc 1 665 11 view .LVU199
 776 0002 6FF00A00 		mvn	r0, #10
 777              	.LVL86:
 665:USBPD/usbpd_pwr_user.c **** 
 778              		.loc 1 665 11 view .LVU200
 779 0006 7047     		bx	lr
 780              	.LVL87:
 781              	.L73:
 668:USBPD/usbpd_pwr_user.c ****   {
 669:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 782              		.loc 1 669 9 view .LVU201
 783 0008 6FF00100 		mvn	r0, #1
 784              	.LVL88:
 670:USBPD/usbpd_pwr_user.c ****   }
 671:USBPD/usbpd_pwr_user.c ****   return ret;
 785              		.loc 1 671 3 is_stmt 1 view .LVU202
 672:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_SetVBUSDisconnectionThreshold */
 673:USBPD/usbpd_pwr_user.c **** }
 786              		.loc 1 673 1 is_stmt 0 view .LVU203
 787 000c 7047     		bx	lr
 788              		.cfi_endproc
 789              	.LFE152:
 791              		.section	.text.BSP_USBPD_PWR_RegisterVBUSDetectCallback,"ax",%progbits
 792              		.align	1
 793              		.weak	BSP_USBPD_PWR_RegisterVBUSDetectCallback
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 798              	BSP_USBPD_PWR_RegisterVBUSDetectCallback:
 799              	.LVL89:
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 27


 800              	.LFB153:
 674:USBPD/usbpd_pwr_user.c **** 
 675:USBPD/usbpd_pwr_user.c **** /**
 676:USBPD/usbpd_pwr_user.c ****   * @brief  Register USB Type-C Current callback function.
 677:USBPD/usbpd_pwr_user.c ****   * @note   Callback function invoked when VBUS rises above 4V (VBUS present) or
 678:USBPD/usbpd_pwr_user.c ****   *         when VBUS falls below programmed threshold (VBUS absent).
 679:USBPD/usbpd_pwr_user.c ****   * @note   Callback function is un-registered when callback function pointer
 680:USBPD/usbpd_pwr_user.c ****   *         argument is NULL.
 681:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 682:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 683:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 684:USBPD/usbpd_pwr_user.c ****   * @param  pfnVBUSDetectCallback callback function pointer
 685:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 686:USBPD/usbpd_pwr_user.c ****   */
 687:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_RegisterVBUSDetectCallback(uint32_t  Instance,
 688:USBPD/usbpd_pwr_user.c ****                                                  USBPD_PWR_VBUSDetectCallbackFunc *pfnVBUSDetectCal
 689:USBPD/usbpd_pwr_user.c **** {
 801              		.loc 1 689 1 is_stmt 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 690:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_RegisterVBUSDetectCallback */
 691:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 692:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 806              		.loc 1 692 3 view .LVU205
 693:USBPD/usbpd_pwr_user.c **** 
 694:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 807              		.loc 1 694 3 view .LVU206
 808              		.loc 1 694 6 is_stmt 0 view .LVU207
 809 0000 10B9     		cbnz	r0, .L76
 692:USBPD/usbpd_pwr_user.c **** 
 810              		.loc 1 692 11 view .LVU208
 811 0002 6FF00A00 		mvn	r0, #10
 812              	.LVL90:
 692:USBPD/usbpd_pwr_user.c **** 
 813              		.loc 1 692 11 view .LVU209
 814 0006 7047     		bx	lr
 815              	.LVL91:
 816              	.L76:
 695:USBPD/usbpd_pwr_user.c ****   {
 696:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 817              		.loc 1 696 9 view .LVU210
 818 0008 6FF00100 		mvn	r0, #1
 819              	.LVL92:
 697:USBPD/usbpd_pwr_user.c ****   }
 698:USBPD/usbpd_pwr_user.c ****   return ret;
 820              		.loc 1 698 3 is_stmt 1 view .LVU211
 699:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_RegisterVBUSDetectCallback */
 700:USBPD/usbpd_pwr_user.c **** }
 821              		.loc 1 700 1 is_stmt 0 view .LVU212
 822 000c 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE153:
 826              		.section	.text.BSP_USBPD_PWR_VBUSIsOn,"ax",%progbits
 827              		.align	1
 828              		.weak	BSP_USBPD_PWR_VBUSIsOn
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 28


 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 833              	BSP_USBPD_PWR_VBUSIsOn:
 834              	.LVL93:
 835              	.LFB154:
 701:USBPD/usbpd_pwr_user.c **** 
 702:USBPD/usbpd_pwr_user.c **** /**
 703:USBPD/usbpd_pwr_user.c ****   * @brief  Get actual VBUS status.
 704:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 705:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 706:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 707:USBPD/usbpd_pwr_user.c ****   * @param  pState VBUS status (1: On, 0: Off)
 708:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 709:USBPD/usbpd_pwr_user.c ****   */
 710:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VBUSIsOn(uint32_t Instance, uint8_t *pState)
 711:USBPD/usbpd_pwr_user.c **** {
 836              		.loc 1 711 1 is_stmt 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 712:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VBUSIsOn */
 713:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 714:USBPD/usbpd_pwr_user.c ****   int32_t ret;
 841              		.loc 1 714 3 view .LVU214
 715:USBPD/usbpd_pwr_user.c ****   uint8_t state = 0U;
 842              		.loc 1 715 3 view .LVU215
 716:USBPD/usbpd_pwr_user.c **** 
 717:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 843              		.loc 1 717 3 view .LVU216
 844              		.loc 1 717 6 is_stmt 0 view .LVU217
 845 0000 20B1     		cbz	r0, .L79
 718:USBPD/usbpd_pwr_user.c ****   {
 719:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 846              		.loc 1 719 9 view .LVU218
 847 0002 6FF00100 		mvn	r0, #1
 848              	.LVL94:
 849              	.L78:
 720:USBPD/usbpd_pwr_user.c ****   }
 721:USBPD/usbpd_pwr_user.c ****   else
 722:USBPD/usbpd_pwr_user.c ****   {
 723:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 724:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VBUSIsOn");
 850              		.loc 1 724 71 is_stmt 1 view .LVU219
 725:USBPD/usbpd_pwr_user.c ****   }
 726:USBPD/usbpd_pwr_user.c ****   *pState = state;
 851              		.loc 1 726 3 view .LVU220
 852              		.loc 1 726 11 is_stmt 0 view .LVU221
 853 0006 0023     		movs	r3, #0
 854 0008 0B70     		strb	r3, [r1]
 727:USBPD/usbpd_pwr_user.c ****   return ret;
 855              		.loc 1 727 3 is_stmt 1 view .LVU222
 728:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VBUSIsOn */
 729:USBPD/usbpd_pwr_user.c **** }
 856              		.loc 1 729 1 is_stmt 0 view .LVU223
 857 000a 7047     		bx	lr
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 29


 858              	.LVL95:
 859              	.L79:
 723:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VBUSIsOn");
 860              		.loc 1 723 9 view .LVU224
 861 000c 6FF00A00 		mvn	r0, #10
 862              	.LVL96:
 723:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VBUSIsOn");
 863              		.loc 1 723 9 view .LVU225
 864 0010 F9E7     		b	.L78
 865              		.cfi_endproc
 866              	.LFE154:
 868              		.section	.text.BSP_USBPD_PWR_VCCSetState,"ax",%progbits
 869              		.align	1
 870              		.weak	BSP_USBPD_PWR_VCCSetState
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 875              	BSP_USBPD_PWR_VCCSetState:
 876              	.LVL97:
 877              	.LFB155:
 730:USBPD/usbpd_pwr_user.c **** 
 731:USBPD/usbpd_pwr_user.c **** /**
 732:USBPD/usbpd_pwr_user.c ****   * @brief  Set state of VCC (specific functions)
 733:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 734:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 735:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 736:USBPD/usbpd_pwr_user.c ****   * @param  State VCC state
 737:USBPD/usbpd_pwr_user.c ****   * @retval BSP status
 738:USBPD/usbpd_pwr_user.c ****   */
 739:USBPD/usbpd_pwr_user.c **** __weak int32_t BSP_USBPD_PWR_VCCSetState(uint32_t Instance, uint32_t State)
 740:USBPD/usbpd_pwr_user.c **** {
 878              		.loc 1 740 1 is_stmt 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 741:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_VCCSetState */
 742:USBPD/usbpd_pwr_user.c ****   /* Check if instance is valid       */
 743:USBPD/usbpd_pwr_user.c ****   int32_t ret = BSP_ERROR_NONE;
 883              		.loc 1 743 3 view .LVU227
 744:USBPD/usbpd_pwr_user.c **** 
 745:USBPD/usbpd_pwr_user.c ****   if (Instance >= USBPD_PWR_INSTANCES_NBR)
 884              		.loc 1 745 3 view .LVU228
 885              		.loc 1 745 6 is_stmt 0 view .LVU229
 886 0000 10B1     		cbz	r0, .L82
 746:USBPD/usbpd_pwr_user.c ****   {
 747:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_WRONG_PARAM;
 887              		.loc 1 747 9 view .LVU230
 888 0002 6FF00100 		mvn	r0, #1
 889              	.LVL98:
 890              		.loc 1 747 9 view .LVU231
 891 0006 7047     		bx	lr
 892              	.LVL99:
 893              	.L82:
 748:USBPD/usbpd_pwr_user.c ****   }
 749:USBPD/usbpd_pwr_user.c ****   else
 750:USBPD/usbpd_pwr_user.c ****   {
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 30


 751:USBPD/usbpd_pwr_user.c ****     ret = BSP_ERROR_FEATURE_NOT_SUPPORTED;
 894              		.loc 1 751 9 view .LVU232
 895 0008 6FF00A00 		mvn	r0, #10
 896              	.LVL100:
 752:USBPD/usbpd_pwr_user.c ****     PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_VCCSetState");
 897              		.loc 1 752 74 is_stmt 1 view .LVU233
 753:USBPD/usbpd_pwr_user.c ****   }
 754:USBPD/usbpd_pwr_user.c ****   return ret;
 898              		.loc 1 754 3 view .LVU234
 755:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_VCCSetState */
 756:USBPD/usbpd_pwr_user.c **** }
 899              		.loc 1 756 1 is_stmt 0 view .LVU235
 900 000c 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE155:
 904              		.section	.text.BSP_USBPD_PWR_EventCallback,"ax",%progbits
 905              		.align	1
 906              		.weak	BSP_USBPD_PWR_EventCallback
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	BSP_USBPD_PWR_EventCallback:
 912              	.LVL101:
 913              	.LFB156:
 757:USBPD/usbpd_pwr_user.c **** 
 758:USBPD/usbpd_pwr_user.c **** /**
 759:USBPD/usbpd_pwr_user.c ****   * @brief  USBPD PWR callback used to notify a asynchronous PWR event.
 760:USBPD/usbpd_pwr_user.c ****   *         (This callback caould be called fromp an IT routine, associated to
 761:USBPD/usbpd_pwr_user.c ****   *         any PWR related event detection mechanism)
 762:USBPD/usbpd_pwr_user.c ****   * @param  Instance Type-C port identifier
 763:USBPD/usbpd_pwr_user.c ****   *         This parameter can be take one of the following values:
 764:USBPD/usbpd_pwr_user.c ****   *         @arg @ref USBPD_PWR_TYPE_C_PORT_1
 765:USBPD/usbpd_pwr_user.c ****   * @retval None
 766:USBPD/usbpd_pwr_user.c ****   */
 767:USBPD/usbpd_pwr_user.c **** __weak void BSP_USBPD_PWR_EventCallback(uint32_t Instance)
 768:USBPD/usbpd_pwr_user.c **** {
 914              		.loc 1 768 1 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 769:USBPD/usbpd_pwr_user.c ****   /* USER CODE BEGIN BSP_USBPD_PWR_EventCallback */
 770:USBPD/usbpd_pwr_user.c ****   PWR_DEBUG_TRACE(Instance, "ADVICE: Update BSP_USBPD_PWR_EventCallback");
 919              		.loc 1 770 74 view .LVU237
 771:USBPD/usbpd_pwr_user.c ****   /* USER CODE END BSP_USBPD_PWR_EventCallback */
 772:USBPD/usbpd_pwr_user.c **** }
 920              		.loc 1 772 1 is_stmt 0 view .LVU238
 921 0000 7047     		bx	lr
 922              		.cfi_endproc
 923              	.LFE156:
 925              		.text
 926              	.Letext0:
 927              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/machine/_de
 928              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.10/gcc/arm-none-eabi/include/sys/_stdint
 929              		.file 4 "USBPD/usbpd_pwr_user.h"
ARM GAS  /var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbpd_pwr_user.c
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:20     .text.BSP_USBPD_PWR_Init:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:26     .text.BSP_USBPD_PWR_Init:0000000000000000 BSP_USBPD_PWR_Init
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:55     .text.BSP_USBPD_PWR_Deinit:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:61     .text.BSP_USBPD_PWR_Deinit:0000000000000000 BSP_USBPD_PWR_Deinit
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:90     .text.BSP_USBPD_PWR_SetRole:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:96     .text.BSP_USBPD_PWR_SetRole:0000000000000000 BSP_USBPD_PWR_SetRole
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:125    .text.BSP_USBPD_PWR_SetPowerMode:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:131    .text.BSP_USBPD_PWR_SetPowerMode:0000000000000000 BSP_USBPD_PWR_SetPowerMode
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:160    .text.BSP_USBPD_PWR_GetPowerMode:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:166    .text.BSP_USBPD_PWR_GetPowerMode:0000000000000000 BSP_USBPD_PWR_GetPowerMode
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:195    .text.BSP_USBPD_PWR_VBUSInit:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:201    .text.BSP_USBPD_PWR_VBUSInit:0000000000000000 BSP_USBPD_PWR_VBUSInit
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:230    .text.BSP_USBPD_PWR_VBUSDeInit:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:236    .text.BSP_USBPD_PWR_VBUSDeInit:0000000000000000 BSP_USBPD_PWR_VBUSDeInit
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:265    .text.BSP_USBPD_PWR_VBUSOn:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:271    .text.BSP_USBPD_PWR_VBUSOn:0000000000000000 BSP_USBPD_PWR_VBUSOn
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:301    .text.BSP_USBPD_PWR_VBUSOff:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:307    .text.BSP_USBPD_PWR_VBUSOff:0000000000000000 BSP_USBPD_PWR_VBUSOff
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:337    .text.BSP_USBPD_PWR_VBUSSetVoltage_Fixed:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:343    .text.BSP_USBPD_PWR_VBUSSetVoltage_Fixed:0000000000000000 BSP_USBPD_PWR_VBUSSetVoltage_Fixed
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:371    .text.BSP_USBPD_PWR_VBUSSetVoltage_Variable:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:377    .text.BSP_USBPD_PWR_VBUSSetVoltage_Variable:0000000000000000 BSP_USBPD_PWR_VBUSSetVoltage_Variable
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:406    .text.BSP_USBPD_PWR_VBUSSetVoltage_Battery:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:412    .text.BSP_USBPD_PWR_VBUSSetVoltage_Battery:0000000000000000 BSP_USBPD_PWR_VBUSSetVoltage_Battery
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:441    .text.BSP_USBPD_PWR_VBUSSetVoltage_APDO:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:447    .text.BSP_USBPD_PWR_VBUSSetVoltage_APDO:0000000000000000 BSP_USBPD_PWR_VBUSSetVoltage_APDO
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:476    .text.BSP_USBPD_PWR_VBUSGetVoltage:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:482    .text.BSP_USBPD_PWR_VBUSGetVoltage:0000000000000000 BSP_USBPD_PWR_VBUSGetVoltage
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:527    .text.BSP_USBPD_PWR_VBUSGetCurrent:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:533    .text.BSP_USBPD_PWR_VBUSGetCurrent:0000000000000000 BSP_USBPD_PWR_VBUSGetCurrent
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:577    .text.BSP_USBPD_PWR_VCONNInit:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:583    .text.BSP_USBPD_PWR_VCONNInit:0000000000000000 BSP_USBPD_PWR_VCONNInit
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:612    .text.BSP_USBPD_PWR_VCONNDeInit:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:618    .text.BSP_USBPD_PWR_VCONNDeInit:0000000000000000 BSP_USBPD_PWR_VCONNDeInit
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:647    .text.BSP_USBPD_PWR_VCONNOn:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:653    .text.BSP_USBPD_PWR_VCONNOn:0000000000000000 BSP_USBPD_PWR_VCONNOn
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:682    .text.BSP_USBPD_PWR_VCONNOff:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:688    .text.BSP_USBPD_PWR_VCONNOff:0000000000000000 BSP_USBPD_PWR_VCONNOff
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:717    .text.BSP_USBPD_PWR_VCONNIsOn:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:723    .text.BSP_USBPD_PWR_VCONNIsOn:0000000000000000 BSP_USBPD_PWR_VCONNIsOn
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:757    .text.BSP_USBPD_PWR_SetVBUSDisconnectionThreshold:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:763    .text.BSP_USBPD_PWR_SetVBUSDisconnectionThreshold:0000000000000000 BSP_USBPD_PWR_SetVBUSDisconnectionThreshold
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:792    .text.BSP_USBPD_PWR_RegisterVBUSDetectCallback:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:798    .text.BSP_USBPD_PWR_RegisterVBUSDetectCallback:0000000000000000 BSP_USBPD_PWR_RegisterVBUSDetectCallback
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:827    .text.BSP_USBPD_PWR_VBUSIsOn:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:833    .text.BSP_USBPD_PWR_VBUSIsOn:0000000000000000 BSP_USBPD_PWR_VBUSIsOn
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:869    .text.BSP_USBPD_PWR_VCCSetState:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:875    .text.BSP_USBPD_PWR_VCCSetState:0000000000000000 BSP_USBPD_PWR_VCCSetState
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:905    .text.BSP_USBPD_PWR_EventCallback:0000000000000000 $t
/var/folders/kd/c99kx6qx51n19rszfxl6vhn80000gp/T//ccK1oLDw.s:911    .text.BSP_USBPD_PWR_EventCallback:0000000000000000 BSP_USBPD_PWR_EventCallback

NO UNDEFINED SYMBOLS
